// Op is an enum table for all 256 possible cpu instructions, mapping bytes to functions.
#[allow(non_camel_case_types)]
#[repr(u8)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Opcode {
    BRK_imp = 0x00,
    ORA_inX = 0x01,
    UDI_001 = 0x02,
    UDI_002 = 0x03,
    UDI_003 = 0x04,
    ORA_zpg = 0x05,
    ASL_zpg = 0x06,
    UDI_004 = 0x07,
    PHP_imp = 0x08,
    ORA_imm = 0x09,
    ASL_acc = 0x0a,
    UDI_005 = 0x0b,
    UDI_006 = 0x0c,
    ORA_abs = 0x0d,
    ASL_abs = 0x0e,
    UDI_007 = 0x0f,
    BPL_rel = 0x10,
    ORA_inY = 0x11,
    UDI_008 = 0x12,
    UDI_009 = 0x13,
    UDI_010 = 0x14,
    ORA_zpX = 0x15,
    ASL_zpX = 0x16,
    UDI_011 = 0x17,
    CLC_imp = 0x18,
    ORA_abY = 0x19,
    UDI_012 = 0x1a,
    UDI_013 = 0x1b,
    UDI_014 = 0x1c,
    ORA_abX = 0x1d,
    ASL_abX = 0x1e,
    UDI_015 = 0x1f,
    JSR_abs = 0x20,
    AND_inX = 0x21,
    UDI_016 = 0x22,
    UDI_017 = 0x23,
    BIT_zpg = 0x24,
    AND_zpg = 0x25,
    ROL_zpg = 0x26,
    UDI_018 = 0x27,
    PLP_imp = 0x28,
    AND_imm = 0x29,
    ROL_acc = 0x2a,
    UDI_019 = 0x2b,
    BIT_abs = 0x2c,
    AND_abs = 0x2d,
    ROL_abs = 0x2e,
    UDI_020 = 0x2f,
    BMI_rel = 0x30,
    AND_inY = 0x31,
    UDI_021 = 0x32,
    UDI_022 = 0x33,
    UDI_023 = 0x34,
    AND_zpX = 0x35,
    ROL_zpX = 0x36,
    UDI_024 = 0x37,
    SEC_imp = 0x38,
    AND_abY = 0x39,
    UDI_025 = 0x3a,
    UDI_026 = 0x3b,
    UDI_027 = 0x3c,
    AND_abX = 0x3d,
    ROL_abX = 0x3e,
    UDI_028 = 0x3f,
    RTI_imp = 0x40,
    EOR_inX = 0x41,
    UDI_029 = 0x42,
    UDI_030 = 0x43,
    UDI_031 = 0x44,
    EOR_zpg = 0x45,
    LSR_zpg = 0x46,
    UDI_032 = 0x47,
    PHA_imp = 0x48,
    EOR_imm = 0x49,
    LSR_acc = 0x4a,
    UDI_033 = 0x4b,
    JMP_abs = 0x4c,
    EOR_abs = 0x4d,
    LSR_abs = 0x4e,
    UDI_034 = 0x4f,
    BVC_rel = 0x50,
    EOR_inY = 0x51,
    UDI_035 = 0x52,
    UDI_036 = 0x53,
    UDI_037 = 0x54,
    EOR_zpX = 0x55,
    LSR_zpX = 0x56,
    UDI_038 = 0x57,
    CLI_imp = 0x58,
    EOR_abY = 0x59,
    UDI_039 = 0x5a,
    UDI_040 = 0x5b,
    UDI_041 = 0x5c,
    EOR_abX = 0x5d,
    LSR_abX = 0x5e,
    UDI_042 = 0x5f,
    RTS_imp = 0x60,
    ADC_inX = 0x61,
    UDI_043 = 0x62,
    UDI_044 = 0x63,
    UDI_045 = 0x64,
    ADC_zpg = 0x65,
    ROR_zpg = 0x66,
    UDI_046 = 0x67,
    PLA_imp = 0x68,
    ADC_imm = 0x69,
    ROR_acc = 0x6a,
    UDI_047 = 0x6b,
    JMP_ind = 0x6c,
    ADC_abs = 0x6d,
    ROR_abs = 0x6e,
    UDI_048 = 0x6f,
    BVS_rel = 0x70,
    ADC_inY = 0x71,
    UDI_049 = 0x72,
    UDI_050 = 0x73,
    UDI_051 = 0x74,
    ADC_zpX = 0x75,
    ROR_zpX = 0x76,
    UDI_052 = 0x77,
    SEI_imp = 0x78,
    ADC_abY = 0x79,
    UDI_053 = 0x7a,
    UDI_054 = 0x7b,
    UDI_055 = 0x7c,
    ADC_abX = 0x7d,
    ROR_abX = 0x7e,
    UDI_056 = 0x7f,
    UDI_057 = 0x80,
    STA_inX = 0x81,
    UDI_058 = 0x82,
    UDI_059 = 0x83,
    STY_zpg = 0x84,
    STA_zpg = 0x85,
    STX_zpg = 0x86,
    UDI_060 = 0x87,
    DEY_imp = 0x88,
    UDI_061 = 0x89,
    TXA_imp = 0x8a,
    UDI_062 = 0x8b,
    STY_abs = 0x8c,
    STA_abs = 0x8d,
    STX_abs = 0x8e,
    UDI_063 = 0x8f,
    BCC_rel = 0x90,
    STA_inY = 0x91,
    UDI_064 = 0x92,
    UDI_065 = 0x93,
    STY_zpX = 0x94,
    STA_zpX = 0x95,
    STX_zpY = 0x96,
    UDI_066 = 0x97,
    TYA_imp = 0x98,
    STA_abY = 0x99,
    TXS_imp = 0x9a,
    UDI_067 = 0x9b,
    UDI_068 = 0x9c,
    STA_abX = 0x9d,
    UDI_069 = 0x9e,
    UDI_070 = 0x9f,
    LDY_imm = 0xa0,
    LDA_inX = 0xa1,
    LDX_imm = 0xa2,
    UDI_071 = 0xa3,
    LDY_zpg = 0xa4,
    LDA_zpg = 0xa5,
    LDX_zpg = 0xa6,
    UDI_072 = 0xa7,
    TAY_imp = 0xa8,
    LDA_imm = 0xa9,
    TAX_imp = 0xaa,
    UDI_073 = 0xab,
    LDY_abs = 0xac,
    LDA_abs = 0xad,
    LDX_abs = 0xae,
    UDI_074 = 0xaf,
    BCS_rel = 0xb0,
    LDA_inY = 0xb1,
    UDI_075 = 0xb2,
    UDI_076 = 0xb3,
    LDY_zpX = 0xb4,
    LDA_zpX = 0xb5,
    LDX_zpY = 0xb6,
    UDI_077 = 0xb7,
    CLV_imp = 0xb8,
    LDA_abY = 0xb9,
    TSX_imp = 0xba,
    UDI_078 = 0xbb,
    LDY_abX = 0xbc,
    LDA_abX = 0xbd,
    LDX_abY = 0xbe,
    UDI_079 = 0xbf,
    CPY_imm = 0xc0,
    CMP_inX = 0xc1,
    UDI_080 = 0xc2,
    UDI_081 = 0xc3,
    CPY_zpg = 0xc4,
    CMP_zpg = 0xc5,
    DEC_zpg = 0xc6,
    UDI_082 = 0xc7,
    INY_imp = 0xc8,
    CMP_imm = 0xc9,
    DEX_imp = 0xca,
    UDI_083 = 0xcb,
    CPY_abs = 0xcc,
    CMP_abs = 0xcd,
    DEC_abs = 0xce,
    UDI_084 = 0xcf,
    BNE_rel = 0xd0,
    CMP_inY = 0xd1,
    UDI_085 = 0xd2,
    UDI_086 = 0xd3,
    UDI_087 = 0xd4,
    CMP_zpX = 0xd5,
    DEC_zpX = 0xd6,
    UDI_088 = 0xd7,
    CLD_imp = 0xd8,
    CMP_abY = 0xd9,
    UDI_089 = 0xda,
    UDI_090 = 0xdb,
    UDI_091 = 0xdc,
    CMP_abX = 0xdd,
    DEC_abX = 0xde,
    UDI_092 = 0xdf,
    CPX_imm = 0xe0,
    SBC_inX = 0xe1,
    UDI_093 = 0xe2,
    UDI_094 = 0xe3,
    CPX_zpg = 0xe4,
    SBC_zpg = 0xe5,
    INC_zpg = 0xe6,
    UDI_095 = 0xe7,
    INX_imp = 0xe8,
    SBC_imm = 0xe9,
    NOP_imp = 0xea,
    UDI_096 = 0xeb,
    CPX_abs = 0xec,
    SBC_abs = 0xed,
    INC_abs = 0xee,
    UDI_097 = 0xef,
    BEQ_rel = 0xf0,
    SBC_inY = 0xf1,
    UDI_098 = 0xf2,
    UDI_099 = 0xf3,
    UDI_100 = 0xf4,
    SBC_zpX = 0xf5,
    INC_zpX = 0xf6,
    UDI_101 = 0xf7,
    SED_imp = 0xf8,
    SBC_abY = 0xf9,
    UDI_102 = 0xfa,
    UDI_103 = 0xfb,
    UDI_104 = 0xfc,
    SBC_abX = 0xfd,
    INC_abX = 0xfe,
    UDI_105 = 0xff,
}
